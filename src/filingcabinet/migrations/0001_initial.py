# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-07-26 15:59
from __future__ import unicode_literals

import functools
import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import taggit.managers

import filingcabinet.models
import filingcabinet.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0002_auto_20150616_2121"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("title", models.CharField(blank=True, default="", max_length=500)),
                ("slug", models.SlugField(blank=True, max_length=250)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "pdf_file",
                    models.FileField(
                        blank=True,
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=filingcabinet.models.get_document_path,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(default=django.utils.timezone.now, null=True),
                ),
                ("num_pages", models.PositiveIntegerField(default=0)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("de", "German")],
                        default="de",
                        max_length=10,
                    ),
                ),
                ("public", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "document",
                "verbose_name_plural": "documents",
                "abstract": False,
                "swappable": "FILINGCABINET_DOCUMENT_MODEL",
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.IntegerField(default=1)),
                ("content", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=functools.partial(
                            filingcabinet.models.get_page_filename,
                            *(),
                            **{"size": "original"}
                        ),
                    ),
                ),
                (
                    "image_large",
                    models.ImageField(
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=functools.partial(
                            filingcabinet.models.get_page_filename,
                            *(),
                            **{"size": "large"}
                        ),
                    ),
                ),
                (
                    "image_normal",
                    models.ImageField(
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=functools.partial(
                            filingcabinet.models.get_page_filename,
                            *(),
                            **{"size": "normal"}
                        ),
                    ),
                ),
                (
                    "image_small",
                    models.ImageField(
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=functools.partial(
                            filingcabinet.models.get_page_filename,
                            *(),
                            **{"size": "small"}
                        ),
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.FILINGCABINET_DOCUMENT_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("number",),
            },
        ),
        migrations.CreateModel(
            name="PageAnnotation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("top", models.IntegerField(blank=True, null=True)),
                ("left", models.IntegerField(blank=True, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        storage=filingcabinet.storage.OverwriteStorage(),
                        upload_to=filingcabinet.models.get_page_annotation_filename,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="filingcabinet.Page",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="filingcabinet_pageannotation",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaggedDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.FILINGCABINET_DOCUMENT_MODEL,
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="filingcabinet_taggeddocument_items",
                        to="taggit.Tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Tag",
                "verbose_name_plural": "Document Tags",
            },
        ),
        migrations.AddField(
            model_name="document",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="filingcabinet.TaggedDocument",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="filingcabinet_document",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
    ]
